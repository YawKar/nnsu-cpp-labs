# Задание №5
Время на решение -- 3 недели.

## Задача №1: Касса и Склад (L)
Разработать классы Kassa и Sklad.

Класс Касса должен имитировать работу кассового аппарата по сканированию товаров и формированию чека за покупку. Каждый товар идентифицируется штрих-кодом (для упрощения – строка из четырех цифр от «0001» до «9999»). Один и тот же товар может сканироваться несколько раз, но в чек информация о каждом товаре входит в виде «наименование – стоимость за единицу (для упрощения в рублях без копеек) – количество – общая стоимость за товар». Чек состоит не менее чем из одной записи указанного вида. Чек дополнительно включает общую стоимость товаров в покупке, суммарную скидку и итоговую сумму к оплате (все в рублях).

База товаров хранится в классе Склад. Товар описывается штрих-кодом, наименованием, стоимостью за единицу товара, скидкой в процентах от стоимости. Скидки устанавливаются на каждый товар независимо (в диапазоне от 1 до 50%).

Класс Касса должен предоставлять следующие операции:
* «сканировать» очередной товар
* получить описание товара со склада
* добавить данные о товаре в чек
* сформировать чек за покупку
* рассчитать итоговую сумму к оплате
* удалить выбранный товар из покупки

Класс Склад должен использоваться для поддержки работы класса Касса и может быть разработан в минимально-необходимом варианте.

## Задача №2: Банкомат и Процессинговый центр (L)
Разработать классы Bankomat и ProcCenter.

Класс Bankomat должен имитировать работу банкомата по приему и выдаче наличных денежных средств (в рублях). Класс должен поддерживать работу с купюрами в 100, 200, 500, 1000, 2000, 5000 рублей. Купюры каждого достоинства хранятся в отдельной кассете. Емкость каждой кассеты – 2000 купюр. Считать, что начальная загрузка банкомата составляет 80% для каждой кассеты.
Выдаваемая или принимаемая за одну операцию сумма ограничена 40 купюрами (независимо от их достоинства). Считать, что клиент банка идентифицируется по номеру пластиковой карты (для упрощения – номер карты от «0001» до «9999»).

База клиентов хранится в классе ProcCenter. Номера выданных клиентам карт могут идти не подряд. Считать, что информация о клиенте состоит из номера карты, ФИО владельца, суммы на счету, (для упрощения – без копеек), PIN-кода (последовательность из 4-х цифр, каждая от 0 до 9).

Класс Bankomat должен предоставлять следующие операции: 
* принять карту клиента
* найти клиента по номеру карты
* проверить PIN-код
* распечатать состояние счета клиента
* выдать клиенту наличные (списав выданную сумму со счета)
* принять от клиента наличные (зачислив полученную сумму на счет)
* заблокировать карту клиента, если до ее возврата клиенту три раза подряд набран неверный PIN-код
* вернуть карту клиенту

Все операции должны сопровождаться необходимыми проверками на указанные выше ограничения.

Класс ProcCenter должен использоваться для поддержки работы класса Bankomat и может быть разработан в минимально-необходимом варианте.

## Задача №3: Депозит и Процессинговый центр (M)
Разработать классы Depozit и ProcCenter.

Класс Depozit должен имитировать работу интернет-банка в части управления депозитом для зарплатных клиентов банка (тех, чья зарплата перечисляется работодателем на счета работников, открытые в данном банке). Депозит может открываться клиентом на выбранный срок. Возможные варианты: 3 месяца, 6 месяцев, 1 год, 2 года, 3 года. Считать, что процентные ставки по депозитам зависят только от срока депозита и начальной суммы. Диапазоны начальных сумм: до 100 тыс. рублей, от 100 до 500 тыс. рублей, от 500 тыс. до 1 млн рублей, свыше 1 млн рублей. Процентные ставки указываются для срока 1 год (например, 6% годовых по вкладу на 6 месяцев от 100 до 500 тыс. рублей или 6.6% годовых по вкладу на 1 год от 500 тыс. до 1 млн рублей). Считать, что проценты начисляются раз в месяц на начальную сумму депозита и могут быть сняты клиентом в любой момент. Депозит может быть закрыт только по истечении срока, на который он был открыт.

База клиентов хранится в классе ProcCenter. Считать, что информация о клиенте состоит из номера зарплатного счета (для упрощения – номер счета от «0001» до «9999»), ФИО владельца, суммы на зарплатном счету, (для упрощения – без копеек), информации о депозите, пароля (произвольная строка, выбранная пользователем, с длиной больше 3 символов). Считать, что авторизация клиента в интернет-банке происходит по номеру зарплатного счета и паролю.

Класс Depozit должен предоставлять следующие операции:
* авторизовать клиента
* показать информацию о доступных клиенту депозитах, исходя из суммы на его зарплатном счету
* проверить наличие открытого депозита
* открыть депозит (переведя указанную сумму с зарплатного счета клиента на депозит)
* показать состояние депозита
* снять проценты (переведя их на зарплатный счет клиента)
* закрыть депозит (переведя всю накопленную сумму на зарплатный счет клиента)

Все операции должны сопровождаться необходимыми проверками на указанные выше ограничения.

Класс ProcCenter должен использоваться для поддержки работы класса Depozit и может быть разработан в минимально-необходимом варианте.

## Задача №4: Кредит и Процессинговый центр (M)
Разработать классы Credit и ProcCenter.

Класс Credit должен имитировать работу интернет-банка в части управления кредитом для зарплатных клиентов банка (тех, чья зарплата перечисляется работодателем на счета работников, открытые в данном банке). Кредит может выдаваться клиенту на выбранный им срок. Возможные варианты: 1 год, 2 года, 3 года, 5 лет, 15 лет. Считать, что процентные ставки по кредитам зависят только от срока и суммы кредита. Диапазоны сумм: до 100 тыс. рублей, от 100 до 500 тыс. рублей, от 500 тыс. до 1 млн рублей, от 1 до 3 млн рублей. Процентные ставки указываются за 1 год (например, 12% годовых по кредиту на 3 года на сумму от 500 тыс. до 1 млн рублей или 15% годовых по кредиту на 1 год на сумму от 100 до 500 тыс. рублей). Выплаты по кредиту начисляются клиенту раз в месяц. Клиент может выплатить сумму больше или равную начисленной. Клиент может досрочно погасить кредит. Считать, что кредит одобряется банком клиенту, если текущая сумма на его зарплатном счету достаточна для шести ежемесячных выплат по кредиту. После одобрения банком сумма кредита перечисляется на зарплатный счет клиента.

База клиентов хранится в классе ProcCenter. Считать, что информация о клиенте состоит из номера зарплатного счета (для упрощения – номер счета от «0001» до «9999»), ФИО владельца, суммы на зарплатном счету, (для упрощения – без копеек), информации о кредите, пароля (произвольная строка, выбранная пользователем, с длиной больше 3 символов). Считать, что авторизация клиента в интернет-банке происходит по номеру зарплатного счета и паролю.

Класс Credit должен предоставлять следующие операции:
* авторизовать клиента
* показать информацию о доступных клиенту кредитах
* проверить наличие взятого в банке кредита
* проверить возможность получения выбранного кредита
* получить выбранный кредит
* показать текущее состояние кредита
* погасить начисления по кредиту
* досрочно погасить кредит

Все операции должны сопровождаться необходимыми проверками на указанные выше ограничения.

Класс ProcCenter должен использоваться для поддержки работы класса Credit и может быть разработан в минимально-необходимом варианте.

## Задача №5: Билетная касса Кинотеатр (H)
Разработать классы TicketOffice и Cinema.

Класс Билетная касса должен имитировать работу кассы по продаже билетов на киносеансы в многозальном кинотеатре. Считать, что продажа билетов проводится на сеансы в пределах трех дней от текущей даты. Каждый сеанс описывается датой, временем начала сеанса, названием фильма, номером зала, стоимостью билета в зависимости от зоны (VIP и обычная). Для упрощения считать, что покупатель указывает тип зоны и требуемое число билетов, а места выделяются кассой автоматически (при наличии свободных). Зрительные места в каждом зале описываются номером ряда и номером в ряду. Для упрощения считать, что число мест во всех рядах в одном зале одинаково. Продажа билетов на сеанс прекращается через 10 минут после начала сеанса.

Информация о всех сеансах на ближайшие 30 дней проката хранится в классе Кинотеатр. Для каждого зала установлена базовая стоимость билетов (на дневные сеансы – от 12.00 до 18.00). Стоимость билетов на утренние сеансы (до 12.00) составляет 75% от базовой, стоимость билетов на вечерние сеансы (после 18.00) – 150% от базовой. Информация о зрительных местах (свободно/занято) в каждом зале на каждом сеансе также хранится в классе Кинотеатр.

Класс Билетная касса должен предоставлять следующие операции:
* принять заказ билетов покупателя: дату, время сеанса, название фильма, номер зала, тип зоны, число мест
* проверить наличие требуемого количества свободных мест в требуемой зоне
* зарезервировать требуемое количество мест
* рассчитать общую стоимость билетов
* отменить заказ билетов
* сформировать билеты (каждый билет включает: дату, время сеанса, название фильма, номер зала, номер ряда, номер места в ряду).

Класс Кинотеатр должен использоваться для поддержки работы класса Билетная касса и может быть разработан в минимально-необходимом варианте.

## Задача №6: Железнодорожная касса и Горьковская железная дорога (H)
Разработать классы RailTicketOffice и GorkyRailway.

Класс Железнодорожная касса должен имитировать работу кассы по продаже билетов на поезда Нижний Новгород – Москва. 
* Считать, что продажа билетов проводится на поезда в пределах 30 дней от текущей даты. 
* Считать, что по маршруту Нижний Новгород – Москва курсирует три скоростных поезда «Ласточка», один фирменный и один скорый поезд в сутки в каждом направлении.
* Все вагоны в поездах «Ласточка» однотипны и содержат по 100 сидячих мест. 
* В фирменном и скором поездах вагоны трех типов: плацкартные (27 верхних, 27 нижних мест), купейные (18 верхних, 18 нижних мест), СВ (18 нижних мест). 
* Число вагонов в поездах «Ласточка» – 8. В фирменном поезде – 2 вагона СВ, 6 купейных вагонов, 4 плацкартных вагона. В скором поезде – 4 купейных вагона, 8 плацкартных вагонов. 
* Поезда идентифицируются номерами (десять номеров из диапазона от 1 до 100), вагоны – номерами (целые числа от 1 до 12), места – номерами (целые числа от 1 до максимума для данного типа вагона).
* Информация о всех поездах и всех проданных билетах хранится в классе Горьковская железная дорога. Для каждого поезда, каждого типа вагона и каждого типа места установлена стоимость билета. Считать, что все поезда не делают промежуточных остановок по маршруту.

Класс Железнодорожная касса должен предоставлять следующие операции:
* принять заказ билетов покупателя: дату, поезд, тип вагона (если есть выбор), количество билетов каждого возможного вида (если есть выбор), ФИО пассажиров
* проверить наличие свободных мест по запросу покупателя (при невозможности выдать все билеты в одном вагоне, считать заказ невыполнимым)
* зарезервировать места
* рассчитать общую стоимость билетов
* отменить заказ билетов
* сформировать билеты (каждый билет включает: дату, номер поезда, номер вагона, номер места, ФИО пассажира, станция отправления, станция прибытия).

Класс Горьковская железная дорога должен использоваться для поддержки работы класса Железнодорожная касса и может быть разработан в минимально-необходимом варианте.


