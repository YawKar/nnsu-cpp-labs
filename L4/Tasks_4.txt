# Задание №4
Время на решение -- 2 недели.

## Задача №1: Термометр (L)
Разработать класс Thermometer.

Класс должен хранить историю наблюдений за температурой в течение одного календарного (не високосного) года.

Наблюдения описываются датой (день, месяц, год) и временем (в часах).

При поступлении нового наблюдения для уже существующих даты и времени старое наблюдение заменяется.

Температура задается в градусах Цельсия. 

Начальная дата и время наблюдений устанавливается при конструировании объектов и в процессе работы не меняется.

Класс должен содержать необходимые служебные методы (конструкторы, деструктор, ...).

Класс должен предоставлять следующие операции: 
* сохранить историю наблюдений в файл и считать историю наблюдений из файла
* узнать начальные дату и время наблюдений
* добавить наблюдение
* узнать температуру в наблюдении, выбранном по дате и времени
* выдать серию наблюдений для выбранной даты
* найти среднюю температуру для выбранной даты, выбранного месяца, за всю историю наблюдений 
* найти среднюю дневную или ночную температуру для выбранного месяца

Программа должна иметь простое меню для выбора необходимых операций.

## Задача №2: Весы напольные (M)
Разработать класс FloorScales.

Класс должен хранить историю наблюдений за показаниями веса членов семьи.

Показания описываются датой (день, месяц, год) и именем члена семьи.

При поступлении нового наблюдения для уже существующей даты старое наблюдение заменяется.

Вес задается в килограммах с точностью до 50 граммов.

Начальная дата и время наблюдений устанавливается при конструировании объектов и в процессе работы не меняется.

Класс должен содержать необходимые служебные методы (конструкторы, деструктор, ...).

Класс должен предоставлять следующие операции: 
* сохранить историю наблюдений в файл и считать историю наблюдений из файла
* узнать начальные дату и время наблюдений
* задать наблюдение
* узнать вес в наблюдении, выбранном по дате и имени члена семьи
* найти средний вес члена семьи в выбранном месяце или за всю историю наблюдений
* найти минимальный вес члена семьи в выбранном месяце или за всю историю наблюдений и дату, когда он наблюдался
* найти максимальный вес члена семьи в выбранном месяце или за всю историю наблюдений и дату, когда он наблюдался

Программа должна иметь простое меню для выбора необходимых операций.

## Задача №3: Шагомер (M)
Разработать класс Pedometer.

Класс должен хранить историю подсчета шагов владельца.

Каждый подсчет описывается датой (день, месяц, год) и интервалом времени (час, минута начала движения, час, минута окончания движения).

Подсчет ведется в шагах с точностью до единицы.

Класс должен содержать необходимые служебные методы (конструкторы, деструктор, ...).

Начальная дата и время наблюдений устанавливается при конструировании объектов и в процессе работы не меняется.

Класс должен предоставлять следующие операции: 
* сохранить историю подсчетов в файл и считать историю подсчетов из файла
* узнать начальные дату и время подсчетов
* добавить подсчет
* получить информацию о подсчете, выбранном по дате и интервалу времени
* найти среднее число шагов в выбранном месяце или за всю историю наблюдений
* найти максимальное число шагов в день в выбранном месяце или за всю историю наблюдений и дату, когда оно было достигнуто

Программа должна иметь простое меню для выбора необходимых операций.
 
## Задача №4: Контакты (H)
Разработать класс Contacts.

Класс должен хранить информацию о контактах владельца.

Каждый контакт содержит следующие данные: фамилия; имя; отчество; телефон; день рождения (день, месяц, год); признак, относится ли контакт к избранным.

Контакты хранятся упорядоченно по фамилии, имени, отчеству. Фамилия, имя, отчество (ФИО) являются обязательными полями. Данные вводятся на русском языке.

Класс должен содержать необходимые служебные методы (конструкторы, деструктор, ...).
Класс должен предоставлять следующие операции:
* сохранить контакты в файл и считать контакты из файла
* создать новый контакт
* найти контакт по ФИО
* изменить контакт, выбранный по ФИО
* найти контакт по телефону
* выдать все контакты на заданную начальную букву ФИО
* узнать текущее число контактов
* внести контакт, выбранный по ФИО в список избранных
* удалить контакт, выбранный по ФИО из списка избранных
* выдать все избранные контакты
* удалить контакт, выбранный по телефону

Программа должна иметь простое меню для выбора необходимых операций.

## Задача №5: Песенник (H)
Разработать класс Songs.

Класс должен хранить информацию о песенных композициях. Каждая песня описывается следующими данными: название, поэт (автор стихов), композитор (автор музыки), исполнитель, название альбома (если входит в какой-то альбом), дата выпуска (день, месяц, год).

Песни хранятся упорядоченно по названию. Данные вводятся на русском языке.

Класс должен содержать необходимые служебные методы (конструкторы, деструктор, ...).

Класс должен предоставлять следующие операции: 
* сохранить песенник в файл и считать песенник из файла
* добавить песню
* изменить данные песни, выбранной по названию
* найти песню по названию и исполнителю
* выдать все песни заданного поэта
* выдать все песни заданного композитора
* выдать все песни заданного исполнителя
* узнать текущее число песен
* удалить песню по названию

Программа должна иметь простое меню для выбора необходимых операций.

## Задача №6: Фильмотека (H)
Разработать класс FilmLibrary.

Класс должен хранить информацию о фильмах. Каждый фильм описывается следующими данными: название, режиссер, сценарист, композитор, дата выхода в прокат (день, месяц, год), сборы (в рублях).

Фильмы хранятся упорядоченно по названию и годам. Данные вводятся на русском языке.

Класс должен содержать необходимые служебные методы (конструкторы, деструктор, ...).

Класс должен предоставлять следующие операции: 
* сохранить фильмотеку в файл и считать фильмотеку из файла
* добавить фильм
* изменить данные фильма выбранного по названию
* найти фильм по названию и году
* выдать все фильмы заданного режиссера
* выдать все фильмы, вышедшие в прокат в выбранном году
* выдать заданное число фильмов с наибольшими сборами
* выдать заданное число фильмов с наибольшими сборами в выбранном году
* узнать текущее число фильмов
* удалить фильм по названию

Программа должна иметь простое меню для выбора необходимых операций.
